apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: monorepository
    control-plane: controller-manager
  name: monorepository-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: monorepository-system/monorepository-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: monorepositories.source.garethjevans.org
spec:
  group: source.garethjevans.org
  names:
    kind: MonoRepository
    listKind: MonoRepositoryList
    plural: monorepositories
    shortNames:
    - monorepo
    singular: monorepository
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sourceRef.name
      name: Source Ref
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.artifact.checksum
      name: Checksum
      type: string
    - jsonPath: .status.artifact.lastUpdateTime
      name: Last Update
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonoRepository is the Schema for the mono repository API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonoRepositorySpec defines the structure of the mono repository.
            properties:
              gitRepository:
                description: GitRepositorySpec specifies the required configuration
                  to produce an Artifact for a Git repository.
                properties:
                  accessFrom:
                    description: 'AccessFrom specifies an Access Control List for
                      allowing cross-namespace references to this object. NOTE: Not
                      implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                    properties:
                      namespaceSelectors:
                        description: NamespaceSelectors is the list of namespace selectors
                          to which this ACL applies. Items in this list are evaluated
                          using a logical OR operation.
                        items:
                          description: NamespaceSelector selects the namespaces to
                            which this ACL applies. An empty map of MatchLabels matches
                            all namespaces in a cluster.
                          properties:
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                    required:
                    - namespaceSelectors
                    type: object
                  gitImplementation:
                    default: go-git
                    description: 'GitImplementation specifies which Git client library
                      implementation to use. Defaults to ''go-git'', valid values
                      are (''go-git'', ''libgit2''). Deprecated: gitImplementation
                      is deprecated now that ''go-git'' is the only supported implementation.'
                    enum:
                    - go-git
                    - libgit2
                    type: string
                  ignore:
                    description: Ignore overrides the set of excluded patterns in
                      the .sourceignore format (which is the same as .gitignore).
                      If not provided, a default will be used, consult the documentation
                      for your version to find out what those are.
                    type: string
                  include:
                    description: Include specifies a list of GitRepository resources
                      which Artifacts should be included in the Artifact produced
                      for this GitRepository.
                    items:
                      description: GitRepositoryInclude specifies a local reference
                        to a GitRepository which Artifact (sub-)contents must be included,
                        and where they should be placed.
                      properties:
                        fromPath:
                          description: FromPath specifies the path to copy contents
                            from, defaults to the root of the Artifact.
                          type: string
                        repository:
                          description: GitRepositoryRef specifies the GitRepository
                            which Artifact contents must be included.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                          required:
                          - name
                          type: object
                        toPath:
                          description: ToPath specifies the path to copy contents
                            to, defaults to the name of the GitRepositoryRef.
                          type: string
                      required:
                      - repository
                      type: object
                    type: array
                  interval:
                    description: Interval at which to check the GitRepository for
                      updates.
                    pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                    type: string
                  recurseSubmodules:
                    description: RecurseSubmodules enables the initialization of all
                      submodules within the GitRepository as cloned from the URL,
                      using their default settings.
                    type: boolean
                  ref:
                    description: Reference specifies the Git reference to resolve
                      and monitor for changes, defaults to the 'master' branch.
                    properties:
                      branch:
                        description: Branch to check out, defaults to 'master' if
                          no other field is defined.
                        type: string
                      commit:
                        description: "Commit SHA to check out, takes precedence over
                          all reference fields. \n This can be combined with Branch
                          to shallow clone the branch, in which the commit is expected
                          to exist."
                        type: string
                      name:
                        description: "Name of the reference to check out; takes precedence
                          over Branch, Tag and SemVer. \n It must be a valid Git reference:
                          https://git-scm.com/docs/git-check-ref-format#_description
                          Examples: \"refs/heads/main\", \"refs/tags/v0.1.0\", \"refs/pull/420/head\",
                          \"refs/merge-requests/1/head\""
                        type: string
                      semver:
                        description: SemVer tag expression to check out, takes precedence
                          over Tag.
                        type: string
                      tag:
                        description: Tag to check out, takes precedence over Branch.
                        type: string
                    type: object
                  secretRef:
                    description: SecretRef specifies the Secret containing authentication
                      credentials for the GitRepository. For HTTPS repositories the
                      Secret must contain 'username' and 'password' fields for basic
                      auth or 'bearerToken' field for token auth. For SSH repositories
                      the Secret must contain 'identity' and 'known_hosts' fields.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  suspend:
                    description: Suspend tells the controller to suspend the reconciliation
                      of this GitRepository.
                    type: boolean
                  timeout:
                    default: 60s
                    description: Timeout for Git operations like cloning, defaults
                      to 60s.
                    pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                    type: string
                  url:
                    description: URL specifies the Git repository URL, it can be an
                      HTTP/S or SSH address.
                    pattern: ^(http|https|ssh)://.*$
                    type: string
                  verify:
                    description: Verification specifies the configuration to verify
                      the Git commit signature(s).
                    properties:
                      mode:
                        description: Mode specifies what Git object should be verified,
                          currently ('head').
                        enum:
                        - head
                        type: string
                      secretRef:
                        description: SecretRef specifies the Secret containing the
                          public keys of trusted Git authors.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - mode
                    - secretRef
                    type: object
                required:
                - interval
                - url
                type: object
              include:
                type: string
            required:
            - gitRepository
            - include
            type: object
          status:
            description: MonoRepositoryStatus defines the observed state of MonoRepository.
            properties:
              artifact:
                description: Artifact represents the last successful GitRepository
                  reconciliation.
                properties:
                  checksum:
                    description: 'Checksum is the SHA256 checksum of the Artifact
                      file. Deprecated: use Artifact.Digest instead.'
                    type: string
                  digest:
                    description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                    pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of the Artifact.
                    format: date-time
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata holds upstream information such as OCI annotations.
                    type: object
                  path:
                    description: Path is the relative file path of the Artifact. It
                      can be used to locate the file in the root of the Artifact storage
                      on the local file system of the controller managing the Source.
                    type: string
                  revision:
                    description: Revision is a human-readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm chart version, etc.
                    type: string
                  size:
                    description: Size is the number of bytes in the file.
                    format: int64
                    type: integer
                  url:
                    description: URL is the HTTP address of the Artifact as exposed
                      by the controller managing the Source. It can be used to retrieve
                      the Artifact for consumption, e.g. by another controller applying
                      the Artifact contents.
                    type: string
                required:
                - path
                - url
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastHandledReconcileAt:
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change of the annotation value can
                  be detected.
                type: string
              observedFileList:
                description: ObservedFileList is the file list used to calculate the
                  checksum for this artifact
                type: string
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the resource
                  that was last processed by the controller.
                format: int64
                type: integer
              observedInclude:
                description: ObservedInclude is the observed list of GitRepository
                  resources used to calculate the checksum for this artifact
                type: string
              url:
                description: URL is the dynamic fetch link for the latest Artifact.
                  It is provided on a "best effort" basis, and using the precise GitRepositoryStatus.Artifact
                  data is recommended.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
imagePullSecrets:
- name: monorepository-pull-secret
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: monorepository
  name: monorepository-controller-manager
  namespace: monorepository-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: monorepository
  name: monorepository-leader-election-role
  namespace: monorepository-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: monorepository-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - source.garethjevans.org
  resources:
  - monorepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.garethjevans.org
  resources:
  - monorepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.garethjevans.org
  resources:
  - monorepositories/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: monorepository
  name: monorepository-leader-election-rolebinding
  namespace: monorepository-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: monorepository-leader-election-role
subjects:
- kind: ServiceAccount
  name: monorepository-controller-manager
  namespace: monorepository-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: monorepository
  name: monorepository-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: monorepository-manager-role
subjects:
- kind: ServiceAccount
  name: monorepository-controller-manager
  namespace: monorepository-system
---
apiVersion: v1
data:
  .dockerconfigjson: e30K
kind: Secret
metadata:
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: monorepository-controller
    app.kubernetes.io/instance: pull-secret
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: secret
    app.kubernetes.io/part-of: monorepository-controller
  name: monorepository-pull-secret
  namespace: monorepository-system
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  name: monorepository-webhook-service
  namespace: monorepository-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: monorepository
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: monorepository
    control-plane: controller-manager
  name: monorepository-controller-manager
  namespace: monorepository-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --webhook-cert-dir=/tmp/k8s-webhook-server/serving-certs
        - --leader-elect
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:18f12fc3a0085bbc303cfbd2ad1151127c1c959c4641e36027547b6b66eb4c92
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: monorepository-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: monorepository-serving-cert
  namespace: monorepository-system
spec:
  dnsNames:
  - monorepository-webhook-service.monorepository-system.svc
  - monorepository-webhook-service.monorepository-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: monorepository-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: monorepository-selfsigned-issuer
  namespace: monorepository-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: monorepository-system/monorepository-serving-cert
  creationTimestamp: null
  name: monorepository-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: monorepository-webhook-service
      namespace: monorepository-system
      path: /integrity-source-garethjevans-org-monorepository
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: integrity.monorepository.source.garethjevans.org
  rules:
  - apiGroups:
    - source.garethjevans.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - monorepositories
  sideEffects: None
